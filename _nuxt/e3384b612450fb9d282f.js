(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{242:function(e,t){e.exports={body:'Given you want to host a web application made with nuxt.js that includes a blog, which dynamically requests each post\nto GitHub and creates a static version in the build (pre-rendering SPA) - that also should be served from a custom domain other than the default github.io preset.\n\nThis blog post documents the steps needed to be exectued in order to deploy such a web app to GitHub Pages.\n## Technologies that I\'ve been using\n\n- A pre-rendering SPA _nuxt.js, vue.js and markdown_\n- GitHub Pages\n- [Paeceiris GitHub Actions](https://github.com/peaceiris/actions-gh-pages)\n- DNS configurations\n\n\n## Create a User Page Site on GitHub Pages\n\nI wanted to host my tech blog as a website, but being also allowed to publish my blog posts at anytime without much effort by using a continuous deployment workflow, which is why I choosed to use GitHub actions and to host my blog on GitHub Pages as user page site.\n\nI already had my blog constantly developed in a private GitHub repository, so I just needed to make the repository public, as I am using GitHub free, where a public repository is required, if you want to create a user page site for your account, **GitHub entitles a user to host at least one User page site per account for free.**\n\nTo have a user page site created all I had to do afterwards, was changing the repository name under the settings tab from the project name to <inline-code>your-user-account.github.io</inline-code>, which represents a repository dedicated to the GitHub page files, where now my tech blog is stored in. \n\n\n\n## Configure a continous deployment workflow with GitHub Actions\n\nAs I want my content to be published automatically everytime I update the source code, I introduced a continous deployment workflow to my project using [Paeceiris GitHub Actions](https://github.com/peaceiris/actions-gh-pages).\n\n\n<image-responsive\n  imageURL="blog/deploy-nuxt-app-to-github-pages/_main.jpg"\n  :width="\'952\'"\n  :height="\'509\'"\n  alt="create user site" />\n\n\nThis workflow enables me to deploy a static site to GitHub Pages with [Static Site Generators](https://jamstack.org/generators/) and also creates a new gh-pages branch automatically, as soon as the corresponding action has been executed.\n\nTo set up a workflow for my muxt project I had to create a **cd.yml** file inside of my repository like the following\n\n<inline-code>/.github/workflows/cd.yml</inline-code>\n\n```\n  name: cd\n\n  on: \n    push:\n      branches:\n        - master\n  jobs:\n    cd:\n      runs-on: ${{ matrix.os }}\n\n      strategy:\n        matrix:\n          os: [ubuntu-latest]\n          node: [14]\n\n      steps:\n        - name: Checkout\n          uses: actions/checkout@master\n\n        - name: Setup node env\n          uses: actions/setup-node@v2.1.2\n          with:\n            node-version: ${{ matrix.node }}\n\n        - name: Install dependencies\n          run: npm ci\n\n        - name: Generate\n          run: npm run generate\n\n        - name: Deploy\n          uses: peaceiris/actions-gh-pages@v3\n          with:\n            github_token: ${{ secrets.GITHUB_TOKEN }}\n            publish_dir: ./dist\n            cname: antje-sommer.de\n```\n## Configure a deployment target to enable nuxt for static hosting\n\nFor static sites add <inline-code>target: static</inline-code> to your **nuxt.config.js**, as Nuxt.js also works as a static site generator.\n\n ```\n  module.exports = {\n    env: {\n      baseUrl,\n      productionUrl\n    },\n    target: \'static\',\n``` \nThe nuxt <inline-code>generate</inline-code> command will generate a static version of your website. It will generate HTML for every one of your routes and put it inside of its own file in the **dist/ directory**\n\n```\n generate: {\n    routes: [\n      \'/en\', \'404\'\n    ]\n    .concat(blogsDe.map(w => `/blog/${w}`))\n    .concat(blogsEn.map(w => `/en/blog/${w}`))\n  }\n```\n\n## Configure your User page site to serve static content\n\nGo to the **settings tab** in GitHub and navigate to **pages** to set the configuation for the gh-pages branch.\n\nI selected the **gh-pages branch as source** and **serve the static content from the root** folder, this setting has the benefit of not having to maintain two repositories at the same time, one for holding the source code and one for serving the build artifacts.\n\n<image-responsive\n  imageURL="blog/deploy-nuxt-app-to-github-pages/create_user_site.png"\n  :width="\'952\'"\n  :height="\'509\'"\n  alt="create user site" />\n\n**_What is the gh-pages branch for?_**\n\nThe gh-pages branch is where GitHub will look for static content to serve, such as build artifacts. \n\nA gh-pages branch can either be created by command line from your local repository\n\n  ```sh\n  git checkout -b gh-pages\n  git push --set-upstream origin gh-pages \n  ```\n\nor by using [Paeceiris GitHub Actions](https://github.com/peaceiris/actions-gh-pages) as part of the configuration of a CD workflow.\n## Serve your website from a custom domain \n\nAfter running a test deployment, my User page site was available on <inline-code>https://sommerantje.github.io</inline-code>\nnow I wanted to have my custom domain being prompted to my User page site.\n\n_Read on GitHub Docs [configure a custom domain](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain)_\n\n\n**Configure a custom domain on GitHub**\n\nTo configure a custom domain in GitHub, go to the settings tab, navigate to pages and add your custom domain accordingly.\n\n<image-responsive\n  imageURL="blog/deploy-nuxt-app-to-github-pages/custom-domain.jpg"\n  :width="\'952\'"\n  :height="\'509\'"\n  alt="create user site" />\n\n**Set up your DNS and CNAME configuration**\n\n**_What is an apex domain?_**\n\nAn Apex domain, is a root domain that does not contain a subdomain, for example <inline-code>antje-sommer.de</inline-code> is an\napex domain because it doesn\'t have a subdomain.\n\n<inline-code>www.antje-sommer.de</inline-code> is not an apex domain because it contains the subdomain part www.\n\nTo point to an apex domain I use an A record pointing to the server\'s IP. \n**Note:** _This solution doesn\'t scale and isn\'t viable for cloud platforms, where multiple and frequently changing backends are responsible for responding to requests._\n\n**_What is a CNAME record?_**\n\nAn IP address isnâ€™t always linked with one domain name. Several names can also refer to the same IP address. To enable this, the DNS uses CNAME records.\n\nA Canonical Name record is a type of resource record in the Domain Name System that maps one domain name to another. This can prove convenient when running multiple services from a single IP address. One can, for example, point _ftp.example.com_ and _www.example.com_ to the DNS entry for _example.com_ , which in turn has an A record which points to the IP address.\n\nI also use CNAME records for my subdomain pointing to <inline-code>sommerantje.github.io</inline-code>.\n\nFor having these changes be made I had to contact the provider service to add the DNS settings like the following:\n\n```DNS settings\n  DNS A Records for my domain antje-sommer.de:\n  185.199.108.153\n  185.199.109.153\n  185.199.110.153\n  185.199.111.153\n  \n  A CNAME Record from www.antje-sommer.de to sommerantje.github.io\n\n```\n\nAs last steps I had to set my apex domain to the cname configuration inside the **cd.yml** where I have set up the peaceiris/actions-gh-pages@v3 for the deployment.\n\n```\n- name: Deploy\n      uses: peaceiris/actions-gh-pages@v3\n      with:\n        github_token: ${{ secrets.GITHUB_TOKEN }}\n        publish_dir: ./dist\n        cname: antje-sommer.de\n```\n\nAnd add a **CNAME** file to my directory on the root level containing my subdomain, to complete the mapping.\n\n```CNAME\n  www.antje-sommer.de\n```\n\n**Enforce HTTPS**\n\nAfter the DNS changes have been added enforce https inside of the GitHub page settings to have your site served from https only.\n\n<image-responsive\n  imageURL="blog/deploy-nuxt-app-to-github-pages/custom_domain_setup.png"\n  :width="\'952\'"\n  :height="\'509\'"\n  alt="create user site" />\n\n## What problems have I encountered \n\n**Testing GitHub Actions is not really possible**\n\nI had to perform test deployments with minimal changes to the master branch, for \ntesting my CD.\n\nThis is also how I encountered an issue within my CD configuration, as I had executed a deployment each time when I pushed to master but also with each pull request, caused by the following configuration inside of the **cd.yml**:\n\n```\non: \n    push:\n      branches:\n        - master\n    pull_request:\n      branches:\n        - master\n```\n\nI needed pull requests not to trigger a deployment because I am  developing my blog content on WIP:Pull requests as part of my personal workflow.\n\n**Wrong CNAME configuration**\n\nAt the beginning I\'ve missed adding my apex domain to the cname configuration within the deployment action and creating a CNAME file in my directory contaning my subdomain.\n\nThat caused a deletation of my custom domain entry within the GitHub pages settings with the consequence that each time a deployment action has been executed my domain entry appears to be empty and therefore my User page site down.\n\n```\n- name: Deploy\n      uses: peaceiris/actions-gh-pages@v3\n      with:\n        github_token: ${{ secrets.GITHUB_TOKEN }}\n        publish_dir: ./dist\n        cname: antje-sommer.de\n``',html:'<p>Given you want to host a web application made with nuxt.js that includes a blog, which dynamically requests each post\nto GitHub and creates a static version in the build (pre-rendering SPA) - that also should be served from a custom domain other than the default github.io preset.</p>\n<p>This blog post documents the steps needed to be exectued in order to deploy such a web app to GitHub Pages.</p>\n<h2>Technologies that I\'ve been using</h2>\n<ul>\n<li>A pre-rendering SPA <em>nuxt.js, vue.js and markdown</em></li>\n<li>GitHub Pages</li>\n<li><a href="https://github.com/peaceiris/actions-gh-pages">Paeceiris GitHub Actions</a></li>\n<li>DNS configurations</li>\n</ul>\n<h2>Create a User Page Site on GitHub Pages</h2>\n<p>I wanted to host my tech blog as a website, but being also allowed to publish my blog posts at anytime without much effort by using a continuous deployment workflow, which is why I choosed to use GitHub actions and to host my blog on GitHub Pages as user page site.</p>\n<p>I already had my blog constantly developed in a private GitHub repository, so I just needed to make the repository public, as I am using GitHub free, where a public repository is required, if you want to create a user page site for your account, <strong>GitHub entitles a user to host at least one User page site per account for free.</strong></p>\n<p>To have a user page site created all I had to do afterwards, was changing the repository name under the settings tab from the project name to <inline-code>your-user-account.github.io</inline-code>, which represents a repository dedicated to the GitHub page files, where now my tech blog is stored in.</p>\n<h2>Configure a continous deployment workflow with GitHub Actions</h2>\n<p>As I want my content to be published automatically everytime I update the source code, I introduced a continous deployment workflow to my project using <a href="https://github.com/peaceiris/actions-gh-pages">Paeceiris GitHub Actions</a>.</p>\n<p><image-responsive\n  imageURL="blog/deploy-nuxt-app-to-github-pages/_main.jpg"\n  :width="\'952\'"\n  :height="\'509\'"\n  alt="create user site" /></p>\n<p>This workflow enables me to deploy a static site to GitHub Pages with <a href="https://jamstack.org/generators/">Static Site Generators</a> and also creates a new gh-pages branch automatically, as soon as the corresponding action has been executed.</p>\n<p>To set up a workflow for my muxt project I had to create a <strong>cd.yml</strong> file inside of my repository like the following</p>\n<p><inline-code>/.github/workflows/cd.yml</inline-code></p>\n<pre><code>  name: cd\n\n  on: \n    push:\n      branches:\n        - master\n  jobs:\n    cd:\n      runs-on: ${{ matrix.os }}\n\n      strategy:\n        matrix:\n          os: [ubuntu-latest]\n          node: [14]\n\n      steps:\n        - name: Checkout\n          uses: actions/checkout@master\n\n        - name: Setup node env\n          uses: actions/setup-node@v2.1.2\n          with:\n            node-version: ${{ matrix.node }}\n\n        - name: Install dependencies\n          run: npm ci\n\n        - name: Generate\n          run: npm run generate\n\n        - name: Deploy\n          uses: peaceiris/actions-gh-pages@v3\n          with:\n            github_token: ${{ secrets.GITHUB_TOKEN }}\n            publish_dir: ./dist\n            cname: antje-sommer.de\n</code></pre>\n<h2>Configure a deployment target to enable nuxt for static hosting</h2>\n<p>For static sites add <inline-code>target: static</inline-code> to your <strong>nuxt.config.js</strong>, as Nuxt.js also works as a static site generator.</p>\n<pre><code> module.exports = {\n   env: {\n     baseUrl,\n     productionUrl\n   },\n   target: \'static\',\n</code></pre>\n<p>The nuxt <inline-code>generate</inline-code> command will generate a static version of your website. It will generate HTML for every one of your routes and put it inside of its own file in the <strong>dist/ directory</strong></p>\n<pre><code> generate: {\n    routes: [\n      \'/en\', \'404\'\n    ]\n    .concat(blogsDe.map(w =&gt; `/blog/${w}`))\n    .concat(blogsEn.map(w =&gt; `/en/blog/${w}`))\n  }\n</code></pre>\n<h2>Configure your User page site to serve static content</h2>\n<p>Go to the <strong>settings tab</strong> in GitHub and navigate to <strong>pages</strong> to set the configuation for the gh-pages branch.</p>\n<p>I selected the <strong>gh-pages branch as source</strong> and <strong>serve the static content from the root</strong> folder, this setting has the benefit of not having to maintain two repositories at the same time, one for holding the source code and one for serving the build artifacts.</p>\n<p><image-responsive\n  imageURL="blog/deploy-nuxt-app-to-github-pages/create_user_site.png"\n  :width="\'952\'"\n  :height="\'509\'"\n  alt="create user site" /></p>\n<p><strong><em>What is the gh-pages branch for?</em></strong></p>\n<p>The gh-pages branch is where GitHub will look for static content to serve, such as build artifacts.</p>\n<p>A gh-pages branch can either be created by command line from your local repository</p>\n<pre><code class="language-sh">git checkout -b gh-pages\ngit push --set-upstream origin gh-pages \n</code></pre>\n<p>or by using <a href="https://github.com/peaceiris/actions-gh-pages">Paeceiris GitHub Actions</a> as part of the configuration of a CD workflow.</p>\n<h2>Serve your website from a custom domain</h2>\n<p>After running a test deployment, my User page site was available on <inline-code>https://sommerantje.github.io</inline-code>\nnow I wanted to have my custom domain being prompted to my User page site.</p>\n<p><em>Read on GitHub Docs <a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain">configure a custom domain</a></em></p>\n<p><strong>Configure a custom domain on GitHub</strong></p>\n<p>To configure a custom domain in GitHub, go to the settings tab, navigate to pages and add your custom domain accordingly.</p>\n<p><image-responsive\n  imageURL="blog/deploy-nuxt-app-to-github-pages/custom-domain.jpg"\n  :width="\'952\'"\n  :height="\'509\'"\n  alt="create user site" /></p>\n<p><strong>Set up your DNS and CNAME configuration</strong></p>\n<p><strong><em>What is an apex domain?</em></strong></p>\n<p>An Apex domain, is a root domain that does not contain a subdomain, for example <inline-code>antje-sommer.de</inline-code> is an\napex domain because it doesn\'t have a subdomain.</p>\n<p><inline-code>www.antje-sommer.de</inline-code> is not an apex domain because it contains the subdomain part www.</p>\n<p>To point to an apex domain I use an A record pointing to the server\'s IP.\n<strong>Note:</strong> <em>This solution doesn\'t scale and isn\'t viable for cloud platforms, where multiple and frequently changing backends are responsible for responding to requests.</em></p>\n<p><strong><em>What is a CNAME record?</em></strong></p>\n<p>An IP address isnâ€™t always linked with one domain name. Several names can also refer to the same IP address. To enable this, the DNS uses CNAME records.</p>\n<p>A Canonical Name record is a type of resource record in the Domain Name System that maps one domain name to another. This can prove convenient when running multiple services from a single IP address. One can, for example, point <em>ftp.example.com</em> and <em>www.example.com</em> to the DNS entry for <em>example.com</em> , which in turn has an A record which points to the IP address.</p>\n<p>I also use CNAME records for my subdomain pointing to <inline-code>sommerantje.github.io</inline-code>.</p>\n<p>For having these changes be made I had to contact the provider service to add the DNS settings like the following:</p>\n<pre><code class="language-DNS">  DNS A Records for my domain antje-sommer.de:\n  185.199.108.153\n  185.199.109.153\n  185.199.110.153\n  185.199.111.153\n  \n  A CNAME Record from www.antje-sommer.de to sommerantje.github.io\n\n</code></pre>\n<p>As last steps I had to set my apex domain to the cname configuration inside the <strong>cd.yml</strong> where I have set up the peaceiris/actions-gh-pages@v3 for the deployment.</p>\n<pre><code>- name: Deploy\n      uses: peaceiris/actions-gh-pages@v3\n      with:\n        github_token: ${{ secrets.GITHUB_TOKEN }}\n        publish_dir: ./dist\n        cname: antje-sommer.de\n</code></pre>\n<p>And add a <strong>CNAME</strong> file to my directory on the root level containing my subdomain, to complete the mapping.</p>\n<pre><code class="language-CNAME">  www.antje-sommer.de\n</code></pre>\n<p><strong>Enforce HTTPS</strong></p>\n<p>After the DNS changes have been added enforce https inside of the GitHub page settings to have your site served from https only.</p>\n<p><image-responsive\n  imageURL="blog/deploy-nuxt-app-to-github-pages/custom_domain_setup.png"\n  :width="\'952\'"\n  :height="\'509\'"\n  alt="create user site" /></p>\n<h2>What problems have I encountered</h2>\n<p><strong>Testing GitHub Actions is not really possible</strong></p>\n<p>I had to perform test deployments with minimal changes to the master branch, for\ntesting my CD.</p>\n<p>This is also how I encountered an issue within my CD configuration, as I had executed a deployment each time when I pushed to master but also with each pull request, caused by the following configuration inside of the <strong>cd.yml</strong>:</p>\n<pre><code>on: \n    push:\n      branches:\n        - master\n    pull_request:\n      branches:\n        - master\n</code></pre>\n<p>I needed pull requests not to trigger a deployment because I am  developing my blog content on WIP:Pull requests as part of my personal workflow.</p>\n<p><strong>Wrong CNAME configuration</strong></p>\n<p>At the beginning I\'ve missed adding my apex domain to the cname configuration within the deployment action and creating a CNAME file in my directory contaning my subdomain.</p>\n<p>That caused a deletation of my custom domain entry within the GitHub pages settings with the consequence that each time a deployment action has been executed my domain entry appears to be empty and therefore my User page site down.</p>\n<pre><code>- name: Deploy\n      uses: peaceiris/actions-gh-pages@v3\n      with:\n        github_token: ${{ secrets.GITHUB_TOKEN }}\n        publish_dir: ./dist\n        cname: antje-sommer.de\n``</code></pre>\n',attributes:{name:"deploy-nuxt-app-to-github-pages",title:"Deploy a nuxt app to GitHub Pages and host your website",year:"14 May 2021",id:"deploy-nuxt-app-to-github-pages",description:"Deploy a nuxt app to GitHub Pages by creating a workflow through GitHub actions and serve your website from a custom domain",_meta:{resourcePath:"/home/runner/work/sommerantje.github.io/sommerantje.github.io/contents/en/blog/deploy-nuxt-app-to-github-pages.md"}},vue:{render:'return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"dynamicMarkdown"},[_c(\'p\',[_vm._v("Given you want to host a web application made with nuxt.js that includes a blog, which dynamically requests each post\\nto GitHub and creates a static version in the build (pre-rendering SPA) - that also should be served from a custom domain other than the default github.io preset.")]),_vm._v(" "),_c(\'p\',[_vm._v("This blog post documents the steps needed to be exectued in order to deploy such a web app to GitHub Pages.")]),_vm._v(" "),_c(\'h2\',[_vm._v("Technologies that I\'ve been using")]),_vm._v(" "),_vm._m(0),_vm._v(" "),_c(\'h2\',[_vm._v("Create a User Page Site on GitHub Pages")]),_vm._v(" "),_c(\'p\',[_vm._v("I wanted to host my tech blog as a website, but being also allowed to publish my blog posts at anytime without much effort by using a continuous deployment workflow, which is why I choosed to use GitHub actions and to host my blog on GitHub Pages as user page site.")]),_vm._v(" "),_vm._m(1),_vm._v(" "),_c(\'p\',[_vm._v("To have a user page site created all I had to do afterwards, was changing the repository name under the settings tab from the project name to "),_c(\'inline-code\',[_vm._v("your-user-account.github.io")]),_vm._v(", which represents a repository dedicated to the GitHub page files, where now my tech blog is stored in.")],1),_vm._v(" "),_c(\'h2\',[_vm._v("Configure a continous deployment workflow with GitHub Actions")]),_vm._v(" "),_vm._m(2),_vm._v(" "),_c(\'p\',[_c(\'image-responsive\',{attrs:{"imageURL":"blog/deploy-nuxt-app-to-github-pages/_main.jpg","width":\'952\',"height":\'509\',"alt":"create user site"}})],1),_vm._v(" "),_vm._m(3),_vm._v(" "),_vm._m(4),_vm._v(" "),_c(\'p\',[_c(\'inline-code\',[_vm._v("/.github/workflows/cd.yml")])],1),_vm._v(" "),_vm._m(5),_vm._v(" "),_c(\'h2\',[_vm._v("Configure a deployment target to enable nuxt for static hosting")]),_vm._v(" "),_c(\'p\',[_vm._v("For static sites add "),_c(\'inline-code\',[_vm._v("target: static")]),_vm._v(" to your "),_c(\'strong\',[_vm._v("nuxt.config.js")]),_vm._v(", as Nuxt.js also works as a static site generator.")],1),_vm._v(" "),_vm._m(6),_vm._v(" "),_c(\'p\',[_vm._v("The nuxt "),_c(\'inline-code\',[_vm._v("generate")]),_vm._v(" command will generate a static version of your website. It will generate HTML for every one of your routes and put it inside of its own file in the "),_c(\'strong\',[_vm._v("dist/ directory")])],1),_vm._v(" "),_vm._m(7),_vm._v(" "),_c(\'h2\',[_vm._v("Configure your User page site to serve static content")]),_vm._v(" "),_vm._m(8),_vm._v(" "),_vm._m(9),_vm._v(" "),_c(\'p\',[_c(\'image-responsive\',{attrs:{"imageURL":"blog/deploy-nuxt-app-to-github-pages/create_user_site.png","width":\'952\',"height":\'509\',"alt":"create user site"}})],1),_vm._v(" "),_vm._m(10),_vm._v(" "),_c(\'p\',[_vm._v("The gh-pages branch is where GitHub will look for static content to serve, such as build artifacts.")]),_vm._v(" "),_c(\'p\',[_vm._v("A gh-pages branch can either be created by command line from your local repository")]),_vm._v(" "),_vm._m(11),_vm._v(" "),_vm._m(12),_vm._v(" "),_c(\'h2\',[_vm._v("Serve your website from a custom domain")]),_vm._v(" "),_c(\'p\',[_vm._v("After running a test deployment, my User page site was available on "),_c(\'inline-code\',[_vm._v("https://sommerantje.github.io")]),_vm._v("\\nnow I wanted to have my custom domain being prompted to my User page site.")],1),_vm._v(" "),_vm._m(13),_vm._v(" "),_vm._m(14),_vm._v(" "),_c(\'p\',[_vm._v("To configure a custom domain in GitHub, go to the settings tab, navigate to pages and add your custom domain accordingly.")]),_vm._v(" "),_c(\'p\',[_c(\'image-responsive\',{attrs:{"imageURL":"blog/deploy-nuxt-app-to-github-pages/custom-domain.jpg","width":\'952\',"height":\'509\',"alt":"create user site"}})],1),_vm._v(" "),_vm._m(15),_vm._v(" "),_vm._m(16),_vm._v(" "),_c(\'p\',[_vm._v("An Apex domain, is a root domain that does not contain a subdomain, for example "),_c(\'inline-code\',[_vm._v("antje-sommer.de")]),_vm._v(" is an\\napex domain because it doesn\'t have a subdomain.")],1),_vm._v(" "),_c(\'p\',[_c(\'inline-code\',[_vm._v("www.antje-sommer.de")]),_vm._v(" is not an apex domain because it contains the subdomain part www.")],1),_vm._v(" "),_vm._m(17),_vm._v(" "),_vm._m(18),_vm._v(" "),_c(\'p\',[_vm._v("An IP address isnâ€™t always linked with one domain name. Several names can also refer to the same IP address. To enable this, the DNS uses CNAME records.")]),_vm._v(" "),_vm._m(19),_vm._v(" "),_c(\'p\',[_vm._v("I also use CNAME records for my subdomain pointing to "),_c(\'inline-code\',[_vm._v("sommerantje.github.io")]),_vm._v(".")],1),_vm._v(" "),_c(\'p\',[_vm._v("For having these changes be made I had to contact the provider service to add the DNS settings like the following:")]),_vm._v(" "),_vm._m(20),_vm._v(" "),_vm._m(21),_vm._v(" "),_vm._m(22),_vm._v(" "),_vm._m(23),_vm._v(" "),_vm._m(24),_vm._v(" "),_vm._m(25),_vm._v(" "),_c(\'p\',[_vm._v("After the DNS changes have been added enforce https inside of the GitHub page settings to have your site served from https only.")]),_vm._v(" "),_c(\'p\',[_c(\'image-responsive\',{attrs:{"imageURL":"blog/deploy-nuxt-app-to-github-pages/custom_domain_setup.png","width":\'952\',"height":\'509\',"alt":"create user site"}})],1),_vm._v(" "),_c(\'h2\',[_vm._v("What problems have I encountered")]),_vm._v(" "),_vm._m(26),_vm._v(" "),_c(\'p\',[_vm._v("I had to perform test deployments with minimal changes to the master branch, for\\ntesting my CD.")]),_vm._v(" "),_vm._m(27),_vm._v(" "),_vm._m(28),_vm._v(" "),_c(\'p\',[_vm._v("I needed pull requests not to trigger a deployment because I am  developing my blog content on WIP:Pull requests as part of my personal workflow.")]),_vm._v(" "),_vm._m(29),_vm._v(" "),_c(\'p\',[_vm._v("At the beginning I\'ve missed adding my apex domain to the cname configuration within the deployment action and creating a CNAME file in my directory contaning my subdomain.")]),_vm._v(" "),_c(\'p\',[_vm._v("That caused a deletation of my custom domain entry within the GitHub pages settings with the consequence that each time a deployment action has been executed my domain entry appears to be empty and therefore my User page site down.")]),_vm._v(" "),_vm._m(30)]) }',staticRenderFns:'return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'ul\',[_c(\'li\',[_vm._v("A pre-rendering SPA "),_c(\'em\',[_vm._v("nuxt.js, vue.js and markdown")])]),_vm._v(" "),_c(\'li\',[_vm._v("GitHub Pages")]),_vm._v(" "),_c(\'li\',[_c(\'a\',{attrs:{"href":"https://github.com/peaceiris/actions-gh-pages"}},[_vm._v("Paeceiris GitHub Actions")])]),_vm._v(" "),_c(\'li\',[_vm._v("DNS configurations")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("I already had my blog constantly developed in a private GitHub repository, so I just needed to make the repository public, as I am using GitHub free, where a public repository is required, if you want to create a user page site for your account, "),_c(\'strong\',[_vm._v("GitHub entitles a user to host at least one User page site per account for free.")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("As I want my content to be published automatically everytime I update the source code, I introduced a continous deployment workflow to my project using "),_c(\'a\',{attrs:{"href":"https://github.com/peaceiris/actions-gh-pages"}},[_vm._v("Paeceiris GitHub Actions")]),_vm._v(".")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("This workflow enables me to deploy a static site to GitHub Pages with "),_c(\'a\',{attrs:{"href":"https://jamstack.org/generators/"}},[_vm._v("Static Site Generators")]),_vm._v(" and also creates a new gh-pages branch automatically, as soon as the corresponding action has been executed.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("To set up a workflow for my muxt project I had to create a "),_c(\'strong\',[_vm._v("cd.yml")]),_vm._v(" file inside of my repository like the following")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("  name: cd\\n\\n  on: \\n    push:\\n      branches:\\n        - master\\n  jobs:\\n    cd:\\n      runs-on: ${{ matrix.os }}\\n\\n      strategy:\\n        matrix:\\n          os: [ubuntu-latest]\\n          node: [14]\\n\\n      steps:\\n        - name: Checkout\\n          uses: actions/checkout@master\\n\\n        - name: Setup node env\\n          uses: actions/setup-node@v2.1.2\\n          with:\\n            node-version: ${{ matrix.node }}\\n\\n        - name: Install dependencies\\n          run: npm ci\\n\\n        - name: Generate\\n          run: npm run generate\\n\\n        - name: Deploy\\n          uses: peaceiris/actions-gh-pages@v3\\n          with:\\n            github_token: ${{ secrets.GITHUB_TOKEN }}\\n            publish_dir: ./dist\\n            cname: antje-sommer.de\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true},[_vm._v(" module.exports = {\\n   env: {\\n     baseUrl,\\n     productionUrl\\n   },\\n   target: \'static\',\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true},[_vm._v(" generate: {\\n    routes: [\\n      \'/en\', \'404\'\\n    ]\\n    .concat(blogsDe.map(w => `/blog/${w}`))\\n    .concat(blogsEn.map(w => `/en/blog/${w}`))\\n  }\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Go to the "),_c(\'strong\',[_vm._v("settings tab")]),_vm._v(" in GitHub and navigate to "),_c(\'strong\',[_vm._v("pages")]),_vm._v(" to set the configuation for the gh-pages branch.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("I selected the "),_c(\'strong\',[_vm._v("gh-pages branch as source")]),_vm._v(" and "),_c(\'strong\',[_vm._v("serve the static content from the root")]),_vm._v(" folder, this setting has the benefit of not having to maintain two repositories at the same time, one for holding the source code and one for serving the build artifacts.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_c(\'strong\',[_c(\'em\',[_vm._v("What is the gh-pages branch for?")])])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-sh"}},[_vm._v("git checkout -b gh-pages\\ngit push --set-upstream origin gh-pages \\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("or by using "),_c(\'a\',{attrs:{"href":"https://github.com/peaceiris/actions-gh-pages"}},[_vm._v("Paeceiris GitHub Actions")]),_vm._v(" as part of the configuration of a CD workflow.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_c(\'em\',[_vm._v("Read on GitHub Docs "),_c(\'a\',{attrs:{"href":"https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain"}},[_vm._v("configure a custom domain")])])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_c(\'strong\',[_vm._v("Configure a custom domain on GitHub")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_c(\'strong\',[_vm._v("Set up your DNS and CNAME configuration")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_c(\'strong\',[_c(\'em\',[_vm._v("What is an apex domain?")])])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("To point to an apex domain I use an A record pointing to the server\'s IP.\\n"),_c(\'strong\',[_vm._v("Note:")]),_vm._v(" "),_c(\'em\',[_vm._v("This solution doesn\'t scale and isn\'t viable for cloud platforms, where multiple and frequently changing backends are responsible for responding to requests.")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_c(\'strong\',[_c(\'em\',[_vm._v("What is a CNAME record?")])])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("A Canonical Name record is a type of resource record in the Domain Name System that maps one domain name to another. This can prove convenient when running multiple services from a single IP address. One can, for example, point "),_c(\'em\',[_vm._v("ftp.example.com")]),_vm._v(" and "),_c(\'em\',[_vm._v("www.example.com")]),_vm._v(" to the DNS entry for "),_c(\'em\',[_vm._v("example.com")]),_vm._v(" , which in turn has an A record which points to the IP address.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-DNS"}},[_vm._v("  DNS A Records for my domain antje-sommer.de:\\n  185.199.108.153\\n  185.199.109.153\\n  185.199.110.153\\n  185.199.111.153\\n  \\n  A CNAME Record from www.antje-sommer.de to sommerantje.github.io\\n\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("As last steps I had to set my apex domain to the cname configuration inside the "),_c(\'strong\',[_vm._v("cd.yml")]),_vm._v(" where I have set up the peaceiris/actions-gh-pages@v3 for the deployment.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("- name: Deploy\\n      uses: peaceiris/actions-gh-pages@v3\\n      with:\\n        github_token: ${{ secrets.GITHUB_TOKEN }}\\n        publish_dir: ./dist\\n        cname: antje-sommer.de\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("And add a "),_c(\'strong\',[_vm._v("CNAME")]),_vm._v(" file to my directory on the root level containing my subdomain, to complete the mapping.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-CNAME"}},[_vm._v("  www.antje-sommer.de\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_c(\'strong\',[_vm._v("Enforce HTTPS")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_c(\'strong\',[_vm._v("Testing GitHub Actions is not really possible")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("This is also how I encountered an issue within my CD configuration, as I had executed a deployment each time when I pushed to master but also with each pull request, caused by the following configuration inside of the "),_c(\'strong\',[_vm._v("cd.yml")]),_vm._v(":")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("on: \\n    push:\\n      branches:\\n        - master\\n    pull_request:\\n      branches:\\n        - master\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_c(\'strong\',[_vm._v("Wrong CNAME configuration")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("- name: Deploy\\n      uses: peaceiris/actions-gh-pages@v3\\n      with:\\n        github_token: ${{ secrets.GITHUB_TOKEN }}\\n        publish_dir: ./dist\\n        cname: antje-sommer.de\\n``")])]) }]',component:{data:function(){return{templateRender:null}},render:function(e){return this.templateRender?this.templateRender():e("div","Rendering")},created:function(){this.templateRender=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"dynamicMarkdown"},[n("p",[e._v("Given you want to host a web application made with nuxt.js that includes a blog, which dynamically requests each post\nto GitHub and creates a static version in the build (pre-rendering SPA) - that also should be served from a custom domain other than the default github.io preset.")]),e._v(" "),n("p",[e._v("This blog post documents the steps needed to be exectued in order to deploy such a web app to GitHub Pages.")]),e._v(" "),n("h2",[e._v("Technologies that I've been using")]),e._v(" "),e._m(0),e._v(" "),n("h2",[e._v("Create a User Page Site on GitHub Pages")]),e._v(" "),n("p",[e._v("I wanted to host my tech blog as a website, but being also allowed to publish my blog posts at anytime without much effort by using a continuous deployment workflow, which is why I choosed to use GitHub actions and to host my blog on GitHub Pages as user page site.")]),e._v(" "),e._m(1),e._v(" "),n("p",[e._v("To have a user page site created all I had to do afterwards, was changing the repository name under the settings tab from the project name to "),n("inline-code",[e._v("your-user-account.github.io")]),e._v(", which represents a repository dedicated to the GitHub page files, where now my tech blog is stored in.")],1),e._v(" "),n("h2",[e._v("Configure a continous deployment workflow with GitHub Actions")]),e._v(" "),e._m(2),e._v(" "),n("p",[n("image-responsive",{attrs:{imageURL:"blog/deploy-nuxt-app-to-github-pages/_main.jpg",width:"952",height:"509",alt:"create user site"}})],1),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),n("p",[n("inline-code",[e._v("/.github/workflows/cd.yml")])],1),e._v(" "),e._m(5),e._v(" "),n("h2",[e._v("Configure a deployment target to enable nuxt for static hosting")]),e._v(" "),n("p",[e._v("For static sites add "),n("inline-code",[e._v("target: static")]),e._v(" to your "),n("strong",[e._v("nuxt.config.js")]),e._v(", as Nuxt.js also works as a static site generator.")],1),e._v(" "),e._m(6),e._v(" "),n("p",[e._v("The nuxt "),n("inline-code",[e._v("generate")]),e._v(" command will generate a static version of your website. It will generate HTML for every one of your routes and put it inside of its own file in the "),n("strong",[e._v("dist/ directory")])],1),e._v(" "),e._m(7),e._v(" "),n("h2",[e._v("Configure your User page site to serve static content")]),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),n("p",[n("image-responsive",{attrs:{imageURL:"blog/deploy-nuxt-app-to-github-pages/create_user_site.png",width:"952",height:"509",alt:"create user site"}})],1),e._v(" "),e._m(10),e._v(" "),n("p",[e._v("The gh-pages branch is where GitHub will look for static content to serve, such as build artifacts.")]),e._v(" "),n("p",[e._v("A gh-pages branch can either be created by command line from your local repository")]),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),n("h2",[e._v("Serve your website from a custom domain")]),e._v(" "),n("p",[e._v("After running a test deployment, my User page site was available on "),n("inline-code",[e._v("https://sommerantje.github.io")]),e._v("\nnow I wanted to have my custom domain being prompted to my User page site.")],1),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),n("p",[e._v("To configure a custom domain in GitHub, go to the settings tab, navigate to pages and add your custom domain accordingly.")]),e._v(" "),n("p",[n("image-responsive",{attrs:{imageURL:"blog/deploy-nuxt-app-to-github-pages/custom-domain.jpg",width:"952",height:"509",alt:"create user site"}})],1),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),n("p",[e._v("An Apex domain, is a root domain that does not contain a subdomain, for example "),n("inline-code",[e._v("antje-sommer.de")]),e._v(" is an\napex domain because it doesn't have a subdomain.")],1),e._v(" "),n("p",[n("inline-code",[e._v("www.antje-sommer.de")]),e._v(" is not an apex domain because it contains the subdomain part www.")],1),e._v(" "),e._m(17),e._v(" "),e._m(18),e._v(" "),n("p",[e._v("An IP address isnâ€™t always linked with one domain name. Several names can also refer to the same IP address. To enable this, the DNS uses CNAME records.")]),e._v(" "),e._m(19),e._v(" "),n("p",[e._v("I also use CNAME records for my subdomain pointing to "),n("inline-code",[e._v("sommerantje.github.io")]),e._v(".")],1),e._v(" "),n("p",[e._v("For having these changes be made I had to contact the provider service to add the DNS settings like the following:")]),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),e._m(22),e._v(" "),e._m(23),e._v(" "),e._m(24),e._v(" "),e._m(25),e._v(" "),n("p",[e._v("After the DNS changes have been added enforce https inside of the GitHub page settings to have your site served from https only.")]),e._v(" "),n("p",[n("image-responsive",{attrs:{imageURL:"blog/deploy-nuxt-app-to-github-pages/custom_domain_setup.png",width:"952",height:"509",alt:"create user site"}})],1),e._v(" "),n("h2",[e._v("What problems have I encountered")]),e._v(" "),e._m(26),e._v(" "),n("p",[e._v("I had to perform test deployments with minimal changes to the master branch, for\ntesting my CD.")]),e._v(" "),e._m(27),e._v(" "),e._m(28),e._v(" "),n("p",[e._v("I needed pull requests not to trigger a deployment because I am  developing my blog content on WIP:Pull requests as part of my personal workflow.")]),e._v(" "),e._m(29),e._v(" "),n("p",[e._v("At the beginning I've missed adding my apex domain to the cname configuration within the deployment action and creating a CNAME file in my directory contaning my subdomain.")]),e._v(" "),n("p",[e._v("That caused a deletation of my custom domain entry within the GitHub pages settings with the consequence that each time a deployment action has been executed my domain entry appears to be empty and therefore my User page site down.")]),e._v(" "),e._m(30)])},this.$options.staticRenderFns=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("A pre-rendering SPA "),n("em",[e._v("nuxt.js, vue.js and markdown")])]),e._v(" "),n("li",[e._v("GitHub Pages")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/peaceiris/actions-gh-pages"}},[e._v("Paeceiris GitHub Actions")])]),e._v(" "),n("li",[e._v("DNS configurations")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("I already had my blog constantly developed in a private GitHub repository, so I just needed to make the repository public, as I am using GitHub free, where a public repository is required, if you want to create a user page site for your account, "),t("strong",[this._v("GitHub entitles a user to host at least one User page site per account for free.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("As I want my content to be published automatically everytime I update the source code, I introduced a continous deployment workflow to my project using "),t("a",{attrs:{href:"https://github.com/peaceiris/actions-gh-pages"}},[this._v("Paeceiris GitHub Actions")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("This workflow enables me to deploy a static site to GitHub Pages with "),t("a",{attrs:{href:"https://jamstack.org/generators/"}},[this._v("Static Site Generators")]),this._v(" and also creates a new gh-pages branch automatically, as soon as the corresponding action has been executed.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("To set up a workflow for my muxt project I had to create a "),t("strong",[this._v("cd.yml")]),this._v(" file inside of my repository like the following")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0},[this._v("  name: cd\n\n  on: \n    push:\n      branches:\n        - master\n  jobs:\n    cd:\n      runs-on: ${{ matrix.os }}\n\n      strategy:\n        matrix:\n          os: [ubuntu-latest]\n          node: [14]\n\n      steps:\n        - name: Checkout\n          uses: actions/checkout@master\n\n        - name: Setup node env\n          uses: actions/setup-node@v2.1.2\n          with:\n            node-version: ${{ matrix.node }}\n\n        - name: Install dependencies\n          run: npm ci\n\n        - name: Generate\n          run: npm run generate\n\n        - name: Deploy\n          uses: peaceiris/actions-gh-pages@v3\n          with:\n            github_token: ${{ secrets.GITHUB_TOKEN }}\n            publish_dir: ./dist\n            cname: antje-sommer.de\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0},[this._v(" module.exports = {\n   env: {\n     baseUrl,\n     productionUrl\n   },\n   target: 'static',\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0},[this._v(" generate: {\n    routes: [\n      '/en', '404'\n    ]\n    .concat(blogsDe.map(w => `/blog/${w}`))\n    .concat(blogsEn.map(w => `/en/blog/${w}`))\n  }\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Go to the "),t("strong",[this._v("settings tab")]),this._v(" in GitHub and navigate to "),t("strong",[this._v("pages")]),this._v(" to set the configuation for the gh-pages branch.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("I selected the "),t("strong",[this._v("gh-pages branch as source")]),this._v(" and "),t("strong",[this._v("serve the static content from the root")]),this._v(" folder, this setting has the benefit of not having to maintain two repositories at the same time, one for holding the source code and one for serving the build artifacts.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[t("em",[this._v("What is the gh-pages branch for?")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-sh"}},[this._v("git checkout -b gh-pages\ngit push --set-upstream origin gh-pages \n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("or by using "),t("a",{attrs:{href:"https://github.com/peaceiris/actions-gh-pages"}},[this._v("Paeceiris GitHub Actions")]),this._v(" as part of the configuration of a CD workflow.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("em",[this._v("Read on GitHub Docs "),t("a",{attrs:{href:"https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain"}},[this._v("configure a custom domain")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Configure a custom domain on GitHub")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Set up your DNS and CNAME configuration")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[t("em",[this._v("What is an apex domain?")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("To point to an apex domain I use an A record pointing to the server's IP.\n"),t("strong",[this._v("Note:")]),this._v(" "),t("em",[this._v("This solution doesn't scale and isn't viable for cloud platforms, where multiple and frequently changing backends are responsible for responding to requests.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[t("em",[this._v("What is a CNAME record?")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("A Canonical Name record is a type of resource record in the Domain Name System that maps one domain name to another. This can prove convenient when running multiple services from a single IP address. One can, for example, point "),t("em",[this._v("ftp.example.com")]),this._v(" and "),t("em",[this._v("www.example.com")]),this._v(" to the DNS entry for "),t("em",[this._v("example.com")]),this._v(" , which in turn has an A record which points to the IP address.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-DNS"}},[this._v("  DNS A Records for my domain antje-sommer.de:\n  185.199.108.153\n  185.199.109.153\n  185.199.110.153\n  185.199.111.153\n  \n  A CNAME Record from www.antje-sommer.de to sommerantje.github.io\n\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("As last steps I had to set my apex domain to the cname configuration inside the "),t("strong",[this._v("cd.yml")]),this._v(" where I have set up the peaceiris/actions-gh-pages@v3 for the deployment.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0},[this._v("- name: Deploy\n      uses: peaceiris/actions-gh-pages@v3\n      with:\n        github_token: ${{ secrets.GITHUB_TOKEN }}\n        publish_dir: ./dist\n        cname: antje-sommer.de\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("And add a "),t("strong",[this._v("CNAME")]),this._v(" file to my directory on the root level containing my subdomain, to complete the mapping.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-CNAME"}},[this._v("  www.antje-sommer.de\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Enforce HTTPS")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Testing GitHub Actions is not really possible")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("This is also how I encountered an issue within my CD configuration, as I had executed a deployment each time when I pushed to master but also with each pull request, caused by the following configuration inside of the "),t("strong",[this._v("cd.yml")]),this._v(":")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0},[this._v("on: \n    push:\n      branches:\n        - master\n    pull_request:\n      branches:\n        - master\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Wrong CNAME configuration")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0},[this._v("- name: Deploy\n      uses: peaceiris/actions-gh-pages@v3\n      with:\n        github_token: ${{ secrets.GITHUB_TOKEN }}\n        publish_dir: ./dist\n        cname: antje-sommer.de\n``")])])}]}}}}}}]);