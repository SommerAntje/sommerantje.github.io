(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{244:function(e,n){e.exports={attributes:{name:"useful-git-commands",title:"Useful git commands",year:"02 June 2021",id:"useful-git-commands",description:"Read about git commands that I've been using almost every day and how I am going to provide them as gist\n"},html:'<p>When I first learned about GitHub and git, I used to work with common Graphical User Interfaces (GUI\'s) like Sourcetree, but over the years I got more and more into working directly with git commands using the commandline.</p>\n<p>Git is the most popular distributed version control system and ubiquitous in the software world.\nThis blog post documents git commands I\'ve been using on a daily basis.</p>\n<p>The corresponding gist to this blog post can be found on gist.github <a href="https://gist.github.com/SommerAntje/211fba15489d91d14cf7529205317b57">My daily commandline</a></p>\n<h2>Used technologies and references</h2>\n<ul>\n<li>git commands</li>\n<li>npm/yarn commands</li>\n<li><a href="https://gist.github.com">gist.github</a></li>\n<li><a href="https://git-scm.com/docs">git documentation</a></li>\n<li><a href="https://docs.npmjs.com">npm documentation</a></li>\n</ul>\n<p><strong>Here are git commands I use almost every day:</strong></p>\n<p>Show the working tree status</p>\n<pre><code>git status\n</code></pre>\n<p>Show commit logs</p>\n<pre><code>git log \ngit log --oneline\n</code></pre>\n<p>Update local repository with the latest status of merged and deleted branches</p>\n<pre><code>git branch --merged origin/master | grep -v \\* | xargs git branch -D \n</code></pre>\n<pre><code>git remote update origin --prune\n</code></pre>\n<p>Delete a feature branch</p>\n<pre><code>git branch -D &lt;feature-branch-name&gt;\n</code></pre>\n<p>Abort a merge by using git reset --merge or by using git merge --abort.</p>\n<pre><code>git abort merge\ngit reset --merge HEAD\n</code></pre>\n<p>Pass --verbose to git-fetch and git-merge</p>\n<pre><code>git remote -v\n</code></pre>\n<p>Create a new feature branch</p>\n<pre><code>git checkout -b new-feature-branch-name\n</code></pre>\n<p>Push a feature branch</p>\n<pre><code>git push --set-upstream origin new-feature-branch-name\n</code></pre>\n<p>Force push if you have set up a pre-push or pre-commit hook in the package.json with Husky\nas there is no push allowed due to unit tests fail</p>\n<pre><code>git push --no-verify\n</code></pre>\n<p>Restore a file</p>\n<pre><code>git restore src/components/componentToBeRestored.vue\n</code></pre>\n<p>Fetch from and integrate with another repository or a local branch</p>\n<p>git pull runs git fetch with the given parameters and calls git merge to merge the retrieved branch heads into the current branch. With --rebase, it runs git rebase instead of git merge.</p>\n<pre><code>git pull\ngit pull â€”rebase\n</code></pre>\n<p>Reset current HEAD to the specified state</p>\n<pre><code>git reset --hard origin/Feature-branch-name\n</code></pre>\n<p>Merge master into your feature branch</p>\n<pre><code>git merge origin/master\n</code></pre>\n<p>Undo a Pushed Merge</p>\n<pre><code>git revert -m 1 &lt;merge-commit-hash&gt;\n</code></pre>\n<p>Revert an existing commit</p>\n<pre><code>git-revert &lt;commit-hash&gt;\n</code></pre>\n<p>Apply changes introduced by an existing commit</p>\n<pre><code>git cherry-pick &lt;commit-hash&gt;\n</code></pre>\n<p>List of  branches in the remote repository</p>\n<pre><code>git branch -a\n</code></pre>\n<p>List create, or delete branches</p>\n<pre><code>git branch\n</code></pre>\n<p>Add file contents to the index</p>\n<pre><code>git add .\n</code></pre>\n<p>Record changes to the repository</p>\n<pre><code>git commit\n</code></pre>\n<h2>npm</h2>\n<p>npm is the world\'s largest Software Library (Registry)\nand also a software Package Manager and Installer.</p>\n<p>npm includes a CLI (Command Line Client) that can be used to download and install packages.\nRead more on <a href="https://docs.npmjs.com/cli/v7/commands">npm cli commands documentation</a></p>\n<p><strong>Here are my favorite npm cli commands</strong></p>\n<p>Create a package.json file</p>\n<pre><code>npm init\n</code></pre>\n<p>Install packages from package.json</p>\n<pre><code>npm i\nnpm install\n</code></pre>\n<p>Check for package updates</p>\n<pre><code>npm run check-updates\n</code></pre>\n<p>Check for outdated dependencies in the package.json</p>\n<pre><code>npm outdated\n</code></pre>\n<p>Add packages to package.json as dev dependency *exact version</p>\n<pre><code>npm install --save-dev --save-exact\n</code></pre>\n<p>Remove and reinstall node modules</p>\n<pre><code>rm -rf node_modules &amp;&amp; npm install\n</code></pre>\n<p>Clear a cache in npm</p>\n<pre><code>npm cache clean\nnpm cache clean --force  \n</code></pre>\n<p>Run single unit tests with npm or yarn using jest\nwithout running the whole test suite\n*note (jest version must be the same as the build is using)</p>\n<pre><code>npm run test:unit -t tests/unit/directory/UnitTest.spec.ts\n</code></pre>\n<pre><code>yarn run jest src/components/ui/UiComponentToTest.spec.ts\n</code></pre>\n<pre><code>yarn run jest --env=jest-environment-jsdom-sixteen  src/components/ui/UiComponentToTest.spec.ts\n</code></pre>\n<p>Flush all pending resolved promise handlers. Useful in tests</p>\n<pre><code>npm install flush-promises --save-exact --save-dev\n</code></pre>\n<p><strong>npx</strong></p>\n<p>Run a command from a local or remote npm package directly, without having to change the package.json\nRead more on <a href="https://docs.npmjs.com/cli/v7/commands/npx">npx commands documentation</a></p>\n<p>Make vue-cli-service serve lint</p>\n<pre><code>npx vue-cli-service lint \n</code></pre>\n<p>Make vue-cli-service serve use --no-fix for lint</p>\n<pre><code>npx run vue-cli-service lint --no-fix\n</code></pre>\n<p>Make vue-cli-service serve use --fix-type suggestion for lint</p>\n<pre><code>npx run vue-cli-service lint  --fix --fix-type suggestion --fix-type problem\n</code></pre>\n<p>Make vue-cli-service serve use auto fix listing for lint</p>\n<pre><code>npx vue-cli-service lint --max-warnings=0 \n</code></pre>\n<h2>Gist</h2>\n<p>Gist is a service provided by GitHub that allows developers to easily share code snippets and even IDE settings (for instance for VS Code).</p>\n<p>I want to have the commands stored online, so that I am able to look them up at anytime and extend the list on demand.</p>\n<p><strong>How to create a Gist</strong>\nRead more on <a href="https://docs.github.com/en/github/writing-on-github/editing-and-sharing-content-with-gists/creating-gists">gist documentation</a></p>\n'}}}]);