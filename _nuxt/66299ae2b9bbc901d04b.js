(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{245:function(e,n){const t={render:function(){this.$createElement;return this._self._c,this._m(0)},staticRenderFns:[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"dynamicMarkdown"},[t("p",[e._v("When I first learned about GitHub and git, I used to work with common Graphical User Interfaces (GUI’s) like Sourcetree, but over the years I got more and more into working directly with git commands using the commandline.")]),e._v(" "),t("p",[e._v("Git is the most popular distributed version control system and ubiquitous in the software world.\nThis blog post documents git commands I’ve been using on a daily basis.")]),e._v(" "),t("p",[e._v("The corresponding gist to this blog post can be found on gist.github "),t("a",{attrs:{href:"https://gist.github.com/SommerAntje/211fba15489d91d14cf7529205317b57"}},[e._v("My daily commandline")])]),e._v(" "),t("h2",[e._v("Used technologies and references")]),e._v(" "),t("ul",[t("li",[e._v("git commands")]),e._v(" "),t("li",[e._v("npm/yarn commands")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://gist.github.com"}},[e._v("gist.github")])]),e._v(" "),t("li",[t("a",{attrs:{href:"https://git-scm.com/docs"}},[e._v("git documentation")])]),e._v(" "),t("li",[t("a",{attrs:{href:"https://docs.npmjs.com"}},[e._v("npm documentation")])])]),e._v(" "),t("p",[t("strong",[e._v("Here are git commands I use almost every day:")])]),e._v(" "),t("p",[e._v("Show the working tree status")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git status\n")])]),e._v(" "),t("p",[e._v("Show commit logs")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git log \ngit log --oneline\n")])]),e._v(" "),t("p",[e._v("Update local repository with the latest status of merged and deleted branches")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git branch --merged origin/master | grep -v \\* | xargs git branch -D \n")])]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git remote update origin --prune\n")])]),e._v(" "),t("p",[e._v("Delete a feature branch")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git branch -D <feature-branch-name>\n")])]),e._v(" "),t("p",[e._v("Abort a merge by using git reset --merge or by using git merge --abort.")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git abort merge\ngit reset --merge HEAD\n")])]),e._v(" "),t("p",[e._v("Pass --verbose to git-fetch and git-merge")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git remote -v\n")])]),e._v(" "),t("p",[e._v("Create a new feature branch")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git checkout -b new-feature-branch-name\n")])]),e._v(" "),t("p",[e._v("Push a feature branch")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git push --set-upstream origin new-feature-branch-name\n")])]),e._v(" "),t("p",[e._v("Force push if you have set up a pre-push or pre-commit hook in the package.json with Husky\nas there is no push allowed due to unit tests fail")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git push --no-verify\n")])]),e._v(" "),t("p",[e._v("Restore a file")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git restore src/components/componentToBeRestored.vue\n")])]),e._v(" "),t("p",[e._v("Fetch from and integrate with another repository or a local branch")]),e._v(" "),t("p",[e._v("git pull runs git fetch with the given parameters and calls git merge to merge the retrieved branch heads into the current branch. With --rebase, it runs git rebase instead of git merge.")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git pull\ngit pull —rebase\n")])]),e._v(" "),t("p",[e._v("Reset current HEAD to the specified state")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git reset --hard origin/Feature-branch-name\n")])]),e._v(" "),t("p",[e._v("Merge master into your feature branch")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git merge origin/master\n")])]),e._v(" "),t("p",[e._v("Undo a Pushed Merge")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git revert -m 1 <merge-commit-hash>\n")])]),e._v(" "),t("p",[e._v("Revert an existing commit")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git-revert <commit-hash>\n")])]),e._v(" "),t("p",[e._v("Apply changes introduced by an existing commit")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git cherry-pick <commit-hash>\n")])]),e._v(" "),t("p",[e._v("List of  branches in the remote repository")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git branch -a\n")])]),e._v(" "),t("p",[e._v("List create, or delete branches")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git branch\n")])]),e._v(" "),t("p",[e._v("Add file contents to the index")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git add .\n")])]),e._v(" "),t("p",[e._v("Record changes to the repository")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git commit\n")])]),e._v(" "),t("h2",[e._v("npm")]),e._v(" "),t("p",[e._v("npm is the world’s largest Software Library (Registry)\nand also a software Package Manager and Installer.")]),e._v(" "),t("p",[e._v("npm includes a CLI (Command Line Client) that can be used to download and install packages.\nRead more on "),t("a",{attrs:{href:"https://docs.npmjs.com/cli/v7/commands"}},[e._v("npm cli commands documentation")])]),e._v(" "),t("p",[t("strong",[e._v("Here are my favorite npm cli commands")])]),e._v(" "),t("p",[e._v("Create a package.json file")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm init\n")])]),e._v(" "),t("p",[e._v("Install packages from package.json")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm i\nnpm install\n")])]),e._v(" "),t("p",[e._v("Check for package updates")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm run check-updates\n")])]),e._v(" "),t("p",[e._v("Install a specific package")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("yarn add some-package@version\n// or\nnpm install some-package@version\nnpm install markdown-it@10.0.0\n")])]),e._v(" "),t("p",[e._v("Check for outdated dependencies in the package.json")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm outdated\n")])]),e._v(" "),t("p",[e._v("Add packages to package.json as dev dependency *exact version")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm install --save-dev --save-exact\n")])]),e._v(" "),t("p",[e._v("Removing a local package from your node_modules directory\nUnscoped package")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm uninstall <package_name>\n")])]),e._v(" "),t("p",[e._v("Scoped package")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm uninstall <@scope/package_name>\n")])]),e._v(" "),t("p",[e._v("Removing a local package from the package.json dependencies\nTo remove a package from the dependencies in package.json, use the --save flag. Include the scope if the package is scoped.\nUnscoped package")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm uninstall --save <package_name>\n")])]),e._v(" "),t("p",[e._v("Scoped package")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm uninstall --save <@scope/package_name>\n")])]),e._v(" "),t("p",[e._v("If you installed a package as a “devDependency” (i.e. with --save-dev), use --save-dev to uninstall it")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm uninstall --save-dev package_name\n")])]),e._v(" "),t("p",[e._v("Remove and reinstall node modules")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("rm -rf node_modules && npm install\n")])]),e._v(" "),t("p",[e._v("Clear a cache in npm")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm cache clean\nnpm cache clean --force  \n")])]),e._v(" "),t("p",[e._v("Run single unit tests with npm or yarn using jest\nwithout running the whole test suite\n*note (jest version must be the same as the build is using)")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm run test:unit -t tests/unit/directory/UnitTest.spec.ts\n")])]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("yarn run jest src/components/ui/UiComponentToTest.spec.ts\n")])]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("yarn run jest --env=jest-environment-jsdom-sixteen  src/components/ui/UiComponentToTest.spec.ts\n")])]),e._v(" "),t("p",[e._v("Flush all pending resolved promise handlers. Useful in tests")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm install flush-promises --save-exact --save-dev\n")])]),e._v(" "),t("p",[t("strong",[e._v("npx")])]),e._v(" "),t("p",[e._v("Run a command from a local or remote npm package directly, without having to change the package.json\nRead more on "),t("a",{attrs:{href:"https://docs.npmjs.com/cli/v7/commands/npx"}},[e._v("npx commands documentation")])]),e._v(" "),t("p",[e._v("Make vue-cli-service serve lint")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npx vue-cli-service lint \n")])]),e._v(" "),t("p",[e._v("Make vue-cli-service serve use --no-fix for lint")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npx run vue-cli-service lint --no-fix\n")])]),e._v(" "),t("p",[e._v("Make vue-cli-service serve use --fix-type suggestion for lint")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npx run vue-cli-service lint  --fix --fix-type suggestion --fix-type problem\n")])]),e._v(" "),t("p",[e._v("Make vue-cli-service serve use auto fix listing for lint")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npx vue-cli-service lint --max-warnings=0 \n")])]),e._v(" "),t("h2",[e._v("nvm")]),e._v(" "),t("p",[e._v("nvm is a version manager for node.js that allows you to quickly install and use different versions of node via the command line.")]),e._v(" "),t("p",[e._v("install the latest node.js version")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("nvm install node \n")])]),e._v(" "),t("p",[e._v("use the default version\nnote: default versions won’t be reseted in a new terminal")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("nvm use default \n")])]),e._v(" "),t("p",[e._v("list already installed node versions")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("nvm ls\n")])]),e._v(" "),t("p",[e._v("list available node releases")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v('nvm ls-remote\nnvm ls-remote | grep -i "latest"        \nnvm ls-remote | grep -i "<node_version>" \n')])]),e._v(" "),t("p",[e._v("install a specific node version")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("nvm install <node_version>  \n")])]),e._v(" "),t("p",[e._v("install latest LTS release of NodeJS")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("nvm install --lts \n")])]),e._v(" "),t("p",[e._v("install latest npm release only")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("nvm install-latest-npm  \n")])]),e._v(" "),t("p",[e._v("switch to the latest available node version")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("nvm use node \n")])]),e._v(" "),t("p",[e._v("switch to a specific version")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("nvm use <node_version_or_alias> \n")])]),e._v(" "),t("p",[e._v("switch to the latest LTS node version")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("nvm use --lts \n")])]),e._v(" "),t("p",[e._v("uninstall a specific Node version")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("nvm uninstall <node_version> \n")])]),e._v(" "),t("p",[e._v("uninstall the latest LTS release of Node")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("nvm uninstall --lts\n")])]),e._v(" "),t("p",[e._v("uninstall latest (Current) release of Node")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("nvm uninstall node  \n")])]),e._v(" "),t("p",[e._v("path to where a specific Node version is installed")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("nvm which <installed_node_version>  \n")])]),e._v(" "),t("p",[e._v("defaults to the latest available node version on a shell")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("nvm alias default node  \n")])]),e._v(" "),t("p",[e._v("set default node version on a shell")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("nvm alias default <node_version>  \n")])]),e._v(" "),t("p",[e._v("To delete or uninstall nvm remove the $NVM_DIR folder (~/.nvm)")]),e._v(" "),t("h2",[e._v("aws - locate hidden aws directory")]),e._v(" "),t("p",[e._v("Assuming awscli has already been installed.")]),e._v(" "),t("p",[e._v("run aws configure first to create the ~/.aws directory")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("aws configure\n")])]),e._v(" "),t("p",[e._v("As .aws is a hidden directory, you need to write command ls -a.\nThis command will provide all hidden folders.")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("ls -a\n")])]),e._v(" "),t("p",[e._v("To edit your config or credential file, navigate to the hidden directory using cd command  and\nopen the file with a nano editor")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v(" nano config\n or \n nano credentials\n")])]),e._v(" "),t("h2",[e._v("Gist")]),e._v(" "),t("p",[e._v("Gist is a service provided by GitHub that allows developers to easily share code snippets and even IDE settings (for instance for VS Code).")]),e._v(" "),t("p",[e._v("I want to have the commands stored online, so that I am able to look them up at anytime and extend the list on demand.")]),e._v(" "),t("p",[t("strong",[e._v("How to create a Gist")]),e._v("\nRead more on "),t("a",{attrs:{href:"https://docs.github.com/en/github/writing-on-github/editing-and-sharing-content-with-gists/creating-gists"}},[e._v("gist documentation")])])])}]};e.exports={attributes:{name:"useful-git-commands",title:"Useful git commands",year:"02 June 2021",id:"useful-git-commands",description:"Read about git commands that I've been using almost every day and how I am going to provide them as gist\n"},vue:{render:t.render,staticRenderFns:t.staticRenderFns,component:{data:function(){return{templateRender:null}},render:function(e){return this.templateRender?this.templateRender():e("div","Rendering")},created:function(){this.templateRender=t.render,this.$options.staticRenderFns=t.staticRenderFns}}}}}}]);