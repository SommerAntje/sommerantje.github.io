(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{242:function(e,n){e.exports={body:"When I first learned about GitHub and git, I used to work with common Graphical User Interfaces (GUI's) like Sourcetree, but over the years I got more and more into working directly with git commands using the commandline.\n\nGit is the most popular distributed version control system and ubiquitous in the software world.\nThis blog post documents git commands I've been using on a daily basis.\n\nThe corresponding gist to this blog post can be found on gist.github [My daily commandline](https://gist.github.com/SommerAntje/211fba15489d91d14cf7529205317b57)\n## Used technologies and references \n\n- git commands\n- npm/yarn commands\n- [gist.github](https://gist.github.com)\n- [git documentation](https://git-scm.com/docs)\n- [npm documentation](https://docs.npmjs.com)\n\n**Here are git commands I use almost every day:**\n\nShow the working tree status\n\n```\ngit status\n```\nShow commit logs\n\n```\ngit log \ngit log --oneline\n```\nUpdate local repository with the latest status of merged and deleted branches\n\n```\ngit branch --merged origin/master | grep -v \\* | xargs git branch -D \n```\n```\ngit remote update origin --prune\n```\nPass --verbose to git-fetch and git-merge\n\n```\ngit remote -v\n```\nCreate a new feature branch\n\n```\ngit checkout -b new-feature-branch-name\n```\nPush a feature branch\n\n```\ngit push --set-upstream origin new-feature-branch-name\n```\nRestore a file\n\n```\ngit restore src/components/componentToBeRestored.vue\n```\nFetch from and integrate with another repository or a local branch\n\ngit pull runs git fetch with the given parameters and calls git merge to merge the retrieved branch heads into the current branch. With --rebase, it runs git rebase instead of git merge.\n\n```\ngit pull\ngit pull —rebase\n```\nReset current HEAD to the specified state\n\n```\ngit reset --hard origin/Feature-branch-name\n```\n\nMerge master into your feature branch\n\n```\ngit merge origin/master\n```\nUndo a Pushed Merge\n\n```\ngit revert -m 1 <merge-commit-hash>\n```\nRevert an existing commit\n\n```\ngit-revert <commit-hash>\n```\nApply changes introduced by an existing commit\n\n```\ngit cherry-pick <commit-hash>\n```\n\nList of  branches in the remote repository\n\n```\ngit branch -a\n```\nList create, or delete branches\n\n```\ngit branch\n```\nAdd file contents to the index\n\n```\ngit add .\n```\nRecord changes to the repository\n\n```\ngit commit\n```\n\n## npm\n\nnpm is the world's largest Software Library (Registry)\nand also a software Package Manager and Installer.\n\nnpm includes a CLI (Command Line Client) that can be used to download and install packages.\nRead more on [npm cli commands documentation](https://docs.npmjs.com/cli/v7/commands)\n\n**Here are my favorite npm cli commands**\n\nCreate a package.json file\n\n```\nnpm init\n```\nInstall packages from package.json\n\n```\nnpm i\nnpm install\n```\nCheck for package updates\n\n```\nnpm run check-updates\n```\nCheck for outdated dependencies in the package.json\n\n```\nnpm outdated\n```\nAdd packages to package.json as dev dependency *exact version\n\n```\nnpm install --save-dev --save-exact\n```\nRemove and reinstall node modules\n\n```\nrm -rf node_modules && npm install\n```\nClear a cache in npm\n\n```\nnpm cache clean\nnpm cache clean --force  \n```\nRun single unit test\n\n```\nnpm run test:unit -t tests/unit/directory/UnitTest.spec.ts\n```\nFlush all pending resolved promise handlers. Useful in tests\n\n```\nnpm install flush-promises --save-exact --save-dev\n```\n**npx**\n\nRun a command from a local or remote npm package directly, without having to change the package.json\nRead more on [npx commands documentation](https://docs.npmjs.com/cli/v7/commands/npx)\n\n\nMake vue-cli-service serve lint\n\n```\nnpx vue-cli-service lint \n```\nMake vue-cli-service serve use --no-fix for lint\n\n```\nnpx run vue-cli-service lint --no-fix\n```\nMake vue-cli-service serve use --fix-type suggestion for lint\n\n```\nnpx run vue-cli-service lint  --fix --fix-type suggestion --fix-type problem\n```\nMake vue-cli-service serve use auto fix listing for lint\n\n```\nnpx vue-cli-service lint --max-warnings=0 \n```\n\n## Gist\n\nGist is a service provided by GitHub that allows developers to easily share code snippets and even IDE settings (for instance for VS Code).\n\nI want to have the commands stored online, so that I am able to look them up at anytime and extend the list on demand.\n\n**How to create a Gist**\nRead more on [gist documentation](https://docs.github.com/en/github/writing-on-github/editing-and-sharing-content-with-gists/creating-gists)\n\n\nFind my git commands here [My daily commandline](https://gist.github.com/SommerAntje/211fba15489d91d14cf7529205317b57)",html:'<p>When I first learned about GitHub and git, I used to work with common Graphical User Interfaces (GUI\'s) like Sourcetree, but over the years I got more and more into working directly with git commands using the commandline.</p>\n<p>Git is the most popular distributed version control system and ubiquitous in the software world.\nThis blog post documents git commands I\'ve been using on a daily basis.</p>\n<p>The corresponding gist to this blog post can be found on gist.github <a href="https://gist.github.com/SommerAntje/211fba15489d91d14cf7529205317b57">My daily commandline</a></p>\n<h2>Used technologies and references</h2>\n<ul>\n<li>git commands</li>\n<li>npm/yarn commands</li>\n<li><a href="https://gist.github.com">gist.github</a></li>\n<li><a href="https://git-scm.com/docs">git documentation</a></li>\n<li><a href="https://docs.npmjs.com">npm documentation</a></li>\n</ul>\n<p><strong>Here are git commands I use almost every day:</strong></p>\n<p>Show the working tree status</p>\n<pre><code>git status\n</code></pre>\n<p>Show commit logs</p>\n<pre><code>git log \ngit log --oneline\n</code></pre>\n<p>Update local repository with the latest status of merged and deleted branches</p>\n<pre><code>git branch --merged origin/master | grep -v \\* | xargs git branch -D \n</code></pre>\n<pre><code>git remote update origin --prune\n</code></pre>\n<p>Pass --verbose to git-fetch and git-merge</p>\n<pre><code>git remote -v\n</code></pre>\n<p>Create a new feature branch</p>\n<pre><code>git checkout -b new-feature-branch-name\n</code></pre>\n<p>Push a feature branch</p>\n<pre><code>git push --set-upstream origin new-feature-branch-name\n</code></pre>\n<p>Restore a file</p>\n<pre><code>git restore src/components/componentToBeRestored.vue\n</code></pre>\n<p>Fetch from and integrate with another repository or a local branch</p>\n<p>git pull runs git fetch with the given parameters and calls git merge to merge the retrieved branch heads into the current branch. With --rebase, it runs git rebase instead of git merge.</p>\n<pre><code>git pull\ngit pull —rebase\n</code></pre>\n<p>Reset current HEAD to the specified state</p>\n<pre><code>git reset --hard origin/Feature-branch-name\n</code></pre>\n<p>Merge master into your feature branch</p>\n<pre><code>git merge origin/master\n</code></pre>\n<p>Undo a Pushed Merge</p>\n<pre><code>git revert -m 1 &lt;merge-commit-hash&gt;\n</code></pre>\n<p>Revert an existing commit</p>\n<pre><code>git-revert &lt;commit-hash&gt;\n</code></pre>\n<p>Apply changes introduced by an existing commit</p>\n<pre><code>git cherry-pick &lt;commit-hash&gt;\n</code></pre>\n<p>List of  branches in the remote repository</p>\n<pre><code>git branch -a\n</code></pre>\n<p>List create, or delete branches</p>\n<pre><code>git branch\n</code></pre>\n<p>Add file contents to the index</p>\n<pre><code>git add .\n</code></pre>\n<p>Record changes to the repository</p>\n<pre><code>git commit\n</code></pre>\n<h2>npm</h2>\n<p>npm is the world\'s largest Software Library (Registry)\nand also a software Package Manager and Installer.</p>\n<p>npm includes a CLI (Command Line Client) that can be used to download and install packages.\nRead more on <a href="https://docs.npmjs.com/cli/v7/commands">npm cli commands documentation</a></p>\n<p><strong>Here are my favorite npm cli commands</strong></p>\n<p>Create a package.json file</p>\n<pre><code>npm init\n</code></pre>\n<p>Install packages from package.json</p>\n<pre><code>npm i\nnpm install\n</code></pre>\n<p>Check for package updates</p>\n<pre><code>npm run check-updates\n</code></pre>\n<p>Check for outdated dependencies in the package.json</p>\n<pre><code>npm outdated\n</code></pre>\n<p>Add packages to package.json as dev dependency *exact version</p>\n<pre><code>npm install --save-dev --save-exact\n</code></pre>\n<p>Remove and reinstall node modules</p>\n<pre><code>rm -rf node_modules &amp;&amp; npm install\n</code></pre>\n<p>Clear a cache in npm</p>\n<pre><code>npm cache clean\nnpm cache clean --force  \n</code></pre>\n<p>Run single unit test</p>\n<pre><code>npm run test:unit -t tests/unit/directory/UnitTest.spec.ts\n</code></pre>\n<p>Flush all pending resolved promise handlers. Useful in tests</p>\n<pre><code>npm install flush-promises --save-exact --save-dev\n</code></pre>\n<p><strong>npx</strong></p>\n<p>Run a command from a local or remote npm package directly, without having to change the package.json\nRead more on <a href="https://docs.npmjs.com/cli/v7/commands/npx">npx commands documentation</a></p>\n<p>Make vue-cli-service serve lint</p>\n<pre><code>npx vue-cli-service lint \n</code></pre>\n<p>Make vue-cli-service serve use --no-fix for lint</p>\n<pre><code>npx run vue-cli-service lint --no-fix\n</code></pre>\n<p>Make vue-cli-service serve use --fix-type suggestion for lint</p>\n<pre><code>npx run vue-cli-service lint  --fix --fix-type suggestion --fix-type problem\n</code></pre>\n<p>Make vue-cli-service serve use auto fix listing for lint</p>\n<pre><code>npx vue-cli-service lint --max-warnings=0 \n</code></pre>\n<h2>Gist</h2>\n<p>Gist is a service provided by GitHub that allows developers to easily share code snippets and even IDE settings (for instance for VS Code).</p>\n<p>I want to have the commands stored online, so that I am able to look them up at anytime and extend the list on demand.</p>\n<p><strong>How to create a Gist</strong>\nRead more on <a href="https://docs.github.com/en/github/writing-on-github/editing-and-sharing-content-with-gists/creating-gists">gist documentation</a></p>\n<p>Find my git commands here <a href="https://gist.github.com/SommerAntje/211fba15489d91d14cf7529205317b57">My daily commandline</a></p>\n',attributes:{name:"useful-git-commands",title:"Useful git commands",year:"02 June 2021",id:"useful-git-commands",description:"Read about git commands that I've been using almost every day and how I am going to provide them as gist\n",_meta:{resourcePath:"/home/runner/work/sommerantje.github.io/sommerantje.github.io/contents/de/blog/useful-git-commands.md"}},vue:{render:"return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) }",staticRenderFns:'return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"dynamicMarkdown"},[_c(\'p\',[_vm._v("When I first learned about GitHub and git, I used to work with common Graphical User Interfaces (GUI\'s) like Sourcetree, but over the years I got more and more into working directly with git commands using the commandline.")]),_vm._v(" "),_c(\'p\',[_vm._v("Git is the most popular distributed version control system and ubiquitous in the software world.\\nThis blog post documents git commands I\'ve been using on a daily basis.")]),_vm._v(" "),_c(\'p\',[_vm._v("The corresponding gist to this blog post can be found on gist.github "),_c(\'a\',{attrs:{"href":"https://gist.github.com/SommerAntje/211fba15489d91d14cf7529205317b57"}},[_vm._v("My daily commandline")])]),_vm._v(" "),_c(\'h2\',[_vm._v("Used technologies and references")]),_vm._v(" "),_c(\'ul\',[_c(\'li\',[_vm._v("git commands")]),_vm._v(" "),_c(\'li\',[_vm._v("npm/yarn commands")]),_vm._v(" "),_c(\'li\',[_c(\'a\',{attrs:{"href":"https://gist.github.com"}},[_vm._v("gist.github")])]),_vm._v(" "),_c(\'li\',[_c(\'a\',{attrs:{"href":"https://git-scm.com/docs"}},[_vm._v("git documentation")])]),_vm._v(" "),_c(\'li\',[_c(\'a\',{attrs:{"href":"https://docs.npmjs.com"}},[_vm._v("npm documentation")])])]),_vm._v(" "),_c(\'p\',[_c(\'strong\',[_vm._v("Here are git commands I use almost every day:")])]),_vm._v(" "),_c(\'p\',[_vm._v("Show the working tree status")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git status\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Show commit logs")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git log \\ngit log --oneline\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Update local repository with the latest status of merged and deleted branches")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git branch --merged origin/master | grep -v \\\\* | xargs git branch -D \\n")])]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git remote update origin --prune\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Pass --verbose to git-fetch and git-merge")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git remote -v\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Create a new feature branch")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git checkout -b new-feature-branch-name\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Push a feature branch")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git push --set-upstream origin new-feature-branch-name\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Restore a file")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git restore src/components/componentToBeRestored.vue\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Fetch from and integrate with another repository or a local branch")]),_vm._v(" "),_c(\'p\',[_vm._v("git pull runs git fetch with the given parameters and calls git merge to merge the retrieved branch heads into the current branch. With --rebase, it runs git rebase instead of git merge.")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git pull\\ngit pull —rebase\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Reset current HEAD to the specified state")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git reset --hard origin/Feature-branch-name\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Merge master into your feature branch")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git merge origin/master\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Undo a Pushed Merge")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git revert -m 1 <merge-commit-hash>\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Revert an existing commit")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git-revert <commit-hash>\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Apply changes introduced by an existing commit")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git cherry-pick <commit-hash>\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("List of  branches in the remote repository")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git branch -a\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("List create, or delete branches")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git branch\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Add file contents to the index")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git add .\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Record changes to the repository")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("git commit\\n")])]),_vm._v(" "),_c(\'h2\',[_vm._v("npm")]),_vm._v(" "),_c(\'p\',[_vm._v("npm is the world\'s largest Software Library (Registry)\\nand also a software Package Manager and Installer.")]),_vm._v(" "),_c(\'p\',[_vm._v("npm includes a CLI (Command Line Client) that can be used to download and install packages.\\nRead more on "),_c(\'a\',{attrs:{"href":"https://docs.npmjs.com/cli/v7/commands"}},[_vm._v("npm cli commands documentation")])]),_vm._v(" "),_c(\'p\',[_c(\'strong\',[_vm._v("Here are my favorite npm cli commands")])]),_vm._v(" "),_c(\'p\',[_vm._v("Create a package.json file")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("npm init\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Install packages from package.json")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("npm i\\nnpm install\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Check for package updates")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("npm run check-updates\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Check for outdated dependencies in the package.json")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("npm outdated\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Add packages to package.json as dev dependency *exact version")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("npm install --save-dev --save-exact\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Remove and reinstall node modules")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("rm -rf node_modules && npm install\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Clear a cache in npm")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("npm cache clean\\nnpm cache clean --force  \\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Run single unit test")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("npm run test:unit -t tests/unit/directory/UnitTest.spec.ts\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Flush all pending resolved promise handlers. Useful in tests")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("npm install flush-promises --save-exact --save-dev\\n")])]),_vm._v(" "),_c(\'p\',[_c(\'strong\',[_vm._v("npx")])]),_vm._v(" "),_c(\'p\',[_vm._v("Run a command from a local or remote npm package directly, without having to change the package.json\\nRead more on "),_c(\'a\',{attrs:{"href":"https://docs.npmjs.com/cli/v7/commands/npx"}},[_vm._v("npx commands documentation")])]),_vm._v(" "),_c(\'p\',[_vm._v("Make vue-cli-service serve lint")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("npx vue-cli-service lint \\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Make vue-cli-service serve use --no-fix for lint")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("npx run vue-cli-service lint --no-fix\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Make vue-cli-service serve use --fix-type suggestion for lint")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("npx run vue-cli-service lint  --fix --fix-type suggestion --fix-type problem\\n")])]),_vm._v(" "),_c(\'p\',[_vm._v("Make vue-cli-service serve use auto fix listing for lint")]),_vm._v(" "),_c(\'pre\',[_c(\'code\',{pre:true},[_vm._v("npx vue-cli-service lint --max-warnings=0 \\n")])]),_vm._v(" "),_c(\'h2\',[_vm._v("Gist")]),_vm._v(" "),_c(\'p\',[_vm._v("Gist is a service provided by GitHub that allows developers to easily share code snippets and even IDE settings (for instance for VS Code).")]),_vm._v(" "),_c(\'p\',[_vm._v("I want to have the commands stored online, so that I am able to look them up at anytime and extend the list on demand.")]),_vm._v(" "),_c(\'p\',[_c(\'strong\',[_vm._v("How to create a Gist")]),_vm._v("\\nRead more on "),_c(\'a\',{attrs:{"href":"https://docs.github.com/en/github/writing-on-github/editing-and-sharing-content-with-gists/creating-gists"}},[_vm._v("gist documentation")])]),_vm._v(" "),_c(\'p\',[_vm._v("Find my git commands here "),_c(\'a\',{attrs:{"href":"https://gist.github.com/SommerAntje/211fba15489d91d14cf7529205317b57"}},[_vm._v("My daily commandline")])])]) }]',component:{data:function(){return{templateRender:null}},render:function(e){return this.templateRender?this.templateRender():e("div","Rendering")},created:function(){this.templateRender=function(){var e=this.$createElement;this._self._c;return this._m(0)},this.$options.staticRenderFns=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"dynamicMarkdown"},[t("p",[e._v("When I first learned about GitHub and git, I used to work with common Graphical User Interfaces (GUI's) like Sourcetree, but over the years I got more and more into working directly with git commands using the commandline.")]),e._v(" "),t("p",[e._v("Git is the most popular distributed version control system and ubiquitous in the software world.\nThis blog post documents git commands I've been using on a daily basis.")]),e._v(" "),t("p",[e._v("The corresponding gist to this blog post can be found on gist.github "),t("a",{attrs:{href:"https://gist.github.com/SommerAntje/211fba15489d91d14cf7529205317b57"}},[e._v("My daily commandline")])]),e._v(" "),t("h2",[e._v("Used technologies and references")]),e._v(" "),t("ul",[t("li",[e._v("git commands")]),e._v(" "),t("li",[e._v("npm/yarn commands")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://gist.github.com"}},[e._v("gist.github")])]),e._v(" "),t("li",[t("a",{attrs:{href:"https://git-scm.com/docs"}},[e._v("git documentation")])]),e._v(" "),t("li",[t("a",{attrs:{href:"https://docs.npmjs.com"}},[e._v("npm documentation")])])]),e._v(" "),t("p",[t("strong",[e._v("Here are git commands I use almost every day:")])]),e._v(" "),t("p",[e._v("Show the working tree status")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git status\n")])]),e._v(" "),t("p",[e._v("Show commit logs")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git log \ngit log --oneline\n")])]),e._v(" "),t("p",[e._v("Update local repository with the latest status of merged and deleted branches")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git branch --merged origin/master | grep -v \\* | xargs git branch -D \n")])]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git remote update origin --prune\n")])]),e._v(" "),t("p",[e._v("Pass --verbose to git-fetch and git-merge")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git remote -v\n")])]),e._v(" "),t("p",[e._v("Create a new feature branch")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git checkout -b new-feature-branch-name\n")])]),e._v(" "),t("p",[e._v("Push a feature branch")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git push --set-upstream origin new-feature-branch-name\n")])]),e._v(" "),t("p",[e._v("Restore a file")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git restore src/components/componentToBeRestored.vue\n")])]),e._v(" "),t("p",[e._v("Fetch from and integrate with another repository or a local branch")]),e._v(" "),t("p",[e._v("git pull runs git fetch with the given parameters and calls git merge to merge the retrieved branch heads into the current branch. With --rebase, it runs git rebase instead of git merge.")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git pull\ngit pull —rebase\n")])]),e._v(" "),t("p",[e._v("Reset current HEAD to the specified state")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git reset --hard origin/Feature-branch-name\n")])]),e._v(" "),t("p",[e._v("Merge master into your feature branch")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git merge origin/master\n")])]),e._v(" "),t("p",[e._v("Undo a Pushed Merge")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git revert -m 1 <merge-commit-hash>\n")])]),e._v(" "),t("p",[e._v("Revert an existing commit")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git-revert <commit-hash>\n")])]),e._v(" "),t("p",[e._v("Apply changes introduced by an existing commit")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git cherry-pick <commit-hash>\n")])]),e._v(" "),t("p",[e._v("List of  branches in the remote repository")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git branch -a\n")])]),e._v(" "),t("p",[e._v("List create, or delete branches")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git branch\n")])]),e._v(" "),t("p",[e._v("Add file contents to the index")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git add .\n")])]),e._v(" "),t("p",[e._v("Record changes to the repository")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("git commit\n")])]),e._v(" "),t("h2",[e._v("npm")]),e._v(" "),t("p",[e._v("npm is the world's largest Software Library (Registry)\nand also a software Package Manager and Installer.")]),e._v(" "),t("p",[e._v("npm includes a CLI (Command Line Client) that can be used to download and install packages.\nRead more on "),t("a",{attrs:{href:"https://docs.npmjs.com/cli/v7/commands"}},[e._v("npm cli commands documentation")])]),e._v(" "),t("p",[t("strong",[e._v("Here are my favorite npm cli commands")])]),e._v(" "),t("p",[e._v("Create a package.json file")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm init\n")])]),e._v(" "),t("p",[e._v("Install packages from package.json")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm i\nnpm install\n")])]),e._v(" "),t("p",[e._v("Check for package updates")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm run check-updates\n")])]),e._v(" "),t("p",[e._v("Check for outdated dependencies in the package.json")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm outdated\n")])]),e._v(" "),t("p",[e._v("Add packages to package.json as dev dependency *exact version")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm install --save-dev --save-exact\n")])]),e._v(" "),t("p",[e._v("Remove and reinstall node modules")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("rm -rf node_modules && npm install\n")])]),e._v(" "),t("p",[e._v("Clear a cache in npm")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm cache clean\nnpm cache clean --force  \n")])]),e._v(" "),t("p",[e._v("Run single unit test")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm run test:unit -t tests/unit/directory/UnitTest.spec.ts\n")])]),e._v(" "),t("p",[e._v("Flush all pending resolved promise handlers. Useful in tests")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npm install flush-promises --save-exact --save-dev\n")])]),e._v(" "),t("p",[t("strong",[e._v("npx")])]),e._v(" "),t("p",[e._v("Run a command from a local or remote npm package directly, without having to change the package.json\nRead more on "),t("a",{attrs:{href:"https://docs.npmjs.com/cli/v7/commands/npx"}},[e._v("npx commands documentation")])]),e._v(" "),t("p",[e._v("Make vue-cli-service serve lint")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npx vue-cli-service lint \n")])]),e._v(" "),t("p",[e._v("Make vue-cli-service serve use --no-fix for lint")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npx run vue-cli-service lint --no-fix\n")])]),e._v(" "),t("p",[e._v("Make vue-cli-service serve use --fix-type suggestion for lint")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npx run vue-cli-service lint  --fix --fix-type suggestion --fix-type problem\n")])]),e._v(" "),t("p",[e._v("Make vue-cli-service serve use auto fix listing for lint")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v("npx vue-cli-service lint --max-warnings=0 \n")])]),e._v(" "),t("h2",[e._v("Gist")]),e._v(" "),t("p",[e._v("Gist is a service provided by GitHub that allows developers to easily share code snippets and even IDE settings (for instance for VS Code).")]),e._v(" "),t("p",[e._v("I want to have the commands stored online, so that I am able to look them up at anytime and extend the list on demand.")]),e._v(" "),t("p",[t("strong",[e._v("How to create a Gist")]),e._v("\nRead more on "),t("a",{attrs:{href:"https://docs.github.com/en/github/writing-on-github/editing-and-sharing-content-with-gists/creating-gists"}},[e._v("gist documentation")])]),e._v(" "),t("p",[e._v("Find my git commands here "),t("a",{attrs:{href:"https://gist.github.com/SommerAntje/211fba15489d91d14cf7529205317b57"}},[e._v("My daily commandline")])])])}]}}}}}}]);